openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/address/:
    get:
      operationId: address_list
      tags:
      - address
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: address_create
      tags:
      - address
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/address/{id}/:
    get:
      operationId: address_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - address
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: address_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - address
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: address_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - address
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: address_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - address
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/albums/:
    get:
      operationId: albums_list
      tags:
      - albums
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
          description: ''
    post:
      operationId: albums_create
      tags:
      - albums
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
  /api/albums/{id}/:
    get:
      operationId: albums_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - albums
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    put:
      operationId: albums_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - albums
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    patch:
      operationId: albums_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - albums
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    delete:
      operationId: albums_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - albums
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/comments/:
    get:
      operationId: comments_list
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: comments_create
      tags:
      - comments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/comments/{id}/:
    get:
      operationId: comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/companies/:
    get:
      operationId: companies_list
      tags:
      - companies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: companies_create
      tags:
      - companies
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/companies/{id}/:
    get:
      operationId: companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/photos/:
    get:
      operationId: photos_list
      tags:
      - photos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Photo'
          description: ''
    post:
      operationId: photos_create
      tags:
      - photos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Photo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
  /api/photos/{id}/:
    get:
      operationId: photos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    put:
      operationId: photos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Photo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    patch:
      operationId: photos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhoto'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
    delete:
      operationId: photos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this photo.
        required: true
      tags:
      - photos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/posts/:
    get:
      operationId: posts_list
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: posts_create
      tags:
      - posts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/{id}/:
    get:
      operationId: posts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: posts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/todos/:
    get:
      operationId: todos_list
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
          description: ''
    post:
      operationId: todos_create
      tags:
      - todos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Todo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Todo'
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
  /api/todos/{id}/:
    get:
      operationId: todos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    put:
      operationId: todos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Todo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Todo'
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    patch:
      operationId: todos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    delete:
      operationId: todos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRead'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRead'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRead'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRead'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
          maxLength: 100
        suite:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        zipcode:
          type: string
          maxLength: 100
        geo:
          $ref: '#/components/schemas/GeoSeriilizer'
      required:
      - city
      - geo
      - street
      - suite
      - zipcode
    Album:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
      required:
      - id
      - title
      - user
      - user_id
    Comment:
      type: object
      properties:
        post_id:
          type: integer
          readOnly: true
        post:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        body:
          type: string
      required:
      - body
      - id
      - name
      - post
      - post_id
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    CompanyName:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
      required:
      - name
    GeoSeriilizer:
      type: object
      properties:
        lat:
          type: string
          maxLength: 100
        lng:
          type: string
          maxLength: 100
      required:
      - lat
      - lng
    PatchedAddress:
      type: object
      properties:
        street:
          type: string
          maxLength: 100
        suite:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        zipcode:
          type: string
          maxLength: 100
        geo:
          $ref: '#/components/schemas/GeoSeriilizer'
    PatchedAlbum:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
    PatchedComment:
      type: object
      properties:
        post_id:
          type: integer
          readOnly: true
        post:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        body:
          type: string
    PatchedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedPhoto:
      type: object
      properties:
        album_id:
          type: integer
          readOnly: true
        album:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        url:
          type: string
          format: uri
          maxLength: 100
        thumbnail_url:
          type: string
          format: uri
    PatchedPost:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        body:
          type: string
    PatchedTodo:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        completed:
          type: boolean
    PatchedUserRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        phone:
          type: string
          maxLength: 100
        website:
          type: string
          maxLength: 100
        company:
          allOf:
          - $ref: '#/components/schemas/CompanyName'
          readOnly: true
    Photo:
      type: object
      properties:
        album_id:
          type: integer
          readOnly: true
        album:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        url:
          type: string
          format: uri
          maxLength: 100
        thumbnail_url:
          type: string
          format: uri
      required:
      - album
      - album_id
      - id
      - thumbnail_url
      - title
      - url
    Post:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        body:
          type: string
      required:
      - body
      - id
      - title
      - user
      - user_id
    Todo:
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        completed:
          type: boolean
      required:
      - id
      - title
      - user
      - user_id
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        address:
          $ref: '#/components/schemas/Address'
        phone:
          type: string
          maxLength: 100
        website:
          type: string
          maxLength: 100
        company:
          $ref: '#/components/schemas/CompanyName'
      required:
      - address
      - company
      - email
      - id
      - name
      - phone
      - username
      - website
    UserRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        phone:
          type: string
          maxLength: 100
        website:
          type: string
          maxLength: 100
        company:
          allOf:
          - $ref: '#/components/schemas/CompanyName'
          readOnly: true
      required:
      - address
      - company
      - email
      - id
      - name
      - phone
      - username
      - website
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
